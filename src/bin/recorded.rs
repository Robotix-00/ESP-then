#![allow(unused)]
use espthen::EspNow;

extern crate pnet;
use pnet::datalink::Channel::Ethernet;
use pnet::packet::ethernet::EthernetPacket;
use pnet::packet::Packet;

extern crate radiotap;
use radiotap::Radiotap;

fn main() {
    let data = [
        // Radiotap
        0x0, 0x0, 0x29, 0x0, 0xee, 0x48, 0x0, 0xa0, 0xa0, 0x8, 0x0, 0xa0, 0xa0, 0x8, 0x0, 0x0, 0x10,
        0x2, 0x6c, 0x9, 0xa0, 0x0, 0xd0, 0x0, 0x64, 0x0, 0x0, 0x0, 0x0, 0x34, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x2,
        // MAC
        0xd0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x52, 0x1c, 0x67, 0xd9, 0xc4,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x1,

        // ESP
        0x7f, 0x18, 0xfe, 0x34, 0xd, 0x5f, 0x70,
        0x4d, 0xdd, 0x31, 0x18, 0xfe, 0x34, 0x4, 0x1, 0x54, 0x48, 0x49, 0x53, 0x20, 0x49, 0x53,
        0x20, 0x41, 0x20, 0x43, 0x48, 0x41, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x9a, 0x99, 0x99, 0x3f, 0x0,
        0x0, 0x0, 0x0, 0xcb, 0xe5, 0xca, 0x52,
    ];
    let (packet, etherdata) = Radiotap::parse(&data).unwrap();
    let ethernet = EthernetPacket::new(&etherdata).unwrap();

    let (esp, data) = EspNow::parse(&ethernet.payload()[10..]).unwrap();
    println!("{:?}", esp);
    println!("{:?}", data);
}
